(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{624:function(v,_,e){"use strict";e.r(_);var t=e(6),d=Object(t.a)({},(function(){var v=this,_=v.$createElement,e=v._self._c||_;return e("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[e("h1",{attrs:{id:"css伪类和伪元素"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#css伪类和伪元素"}},[v._v("#")]),v._v(" CSS伪类和伪元素🎉")]),v._v(" "),e("p",[v._v("​\t\t"),e("code",[v._v("CSS")]),v._v("引入伪类和伪元素概念是为了格式化文档树以外的信息。比如，一句话中的第一个字母，或者是列表中的第一个元素。")]),v._v(" "),e("p",[v._v("​\t\t"),e("code",[v._v("CSS3")]),v._v("规范中要求使用"),e("code",[v._v(":")]),v._v("用于"),e("code",[v._v("CSS3伪类")]),v._v("，双冒号"),e("code",[v._v("::")]),v._v("用于"),e("code",[v._v("CSS3伪元素")]),v._v("，以区分伪类和伪元素。")]),v._v(" "),e("p",[v._v("​\t\t引用标准中的话:")]),v._v(" "),e("blockquote",[e("p",[e("code",[v._v("CSS")]),v._v(" "),e("strong",[v._v("introduces the concepts of pseudo-elements and pseudo-classes to permit formatting based on")]),v._v(" "),e("strong",[v._v("information that lies outside the document tree.")])]),v._v(" "),e("p",[v._v("("),e("code",[v._v("CSS")]),v._v("引入伪类和伪元素的概念是为了实现基于文档树之外的信息的格式化。)")])]),v._v(" "),e("h2",{attrs:{id:"伪类"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#伪类"}},[v._v("#")]),v._v(" 伪类")]),v._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"title"}),e("p",[v._v("伪类用于当已有元素处于的某个状态是，为其添加特定的样式，这种状态更具用户行为动态变化。比如，当用户悬停在指定元素时，可以通过"),e("code",[v._v(":hover")]),v._v("来描述元素的这个状态。虽然他和"),e("code",[v._v("css")]),v._v("普通的类相似，不过它只有处于"),e("code",[v._v("dom")]),v._v("树无法描述的状态下才能为元素添加样式。")])]),e("h3",{attrs:{id:"状态性伪类"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#状态性伪类"}},[v._v("#")]),v._v(" 状态性伪类")]),v._v(" "),e("ul",[e("li",[e("p",[e("code",[v._v(":link")]),v._v(": 未访问过的链接")])]),v._v(" "),e("li",[e("p",[e("code",[v._v(":hover")]),v._v(": 鼠标悬停的元素")])]),v._v(" "),e("li",[e("p",[e("code",[v._v(":active")]),v._v(": 被激活的元素")])]),v._v(" "),e("li",[e("p",[e("code",[v._v(":visited")]),v._v(": 被访问过的链接")])]),v._v(" "),e("li",[e("p",[e("code",[v._v(":focus")]),v._v(": 拥有键盘输入焦点的元素")])])]),v._v(" "),e("h3",{attrs:{id:"结构性伪类"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#结构性伪类"}},[v._v("#")]),v._v(" 结构性伪类")]),v._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"title"}),e("p",[e("code",[v._v("CSS3")]),v._v("新增的选择器，利用"),e("code",[v._v("dom")]),v._v("树进行元素过滤，通过文档结构之间的关系来匹配元素，能够减少"),e("code",[v._v("class、id")]),v._v("的定义，使文档结构更简洁")])]),e("ul",[e("li",[e("code",[v._v("div:first-child")]),v._v(" : 选择属于其父元素的第一个子元素的每个"),e("code",[v._v("div")]),v._v("元素")]),v._v(" "),e("li",[e("code",[v._v("div:last-child")]),v._v(": 选择属于其父元素最后一个子元素的每个"),e("code",[v._v("div")]),v._v("元素")]),v._v(" "),e("li",[e("code",[v._v("div:nth-child(n)")]),v._v(":  选择属于其父元素的第n个子元素的每个"),e("code",[v._v("div")]),v._v("元素")]),v._v(" "),e("li",[e("code",[v._v("div:nth-last-child(n)")]),v._v(":同上，从这个元素的最后一个子元素开始算")]),v._v(" "),e("li",[e("code",[v._v("div:nth-of-type(n)")]),v._v(": 选择属于其父元素第"),e("code",[v._v("n")]),v._v("个"),e("code",[v._v("div")]),v._v("元素的每个"),e("code",[v._v("div")]),v._v("元素")]),v._v(" "),e("li",[e("code",[v._v("div:nth-last-of-type(n)")]),v._v(":同上，但是从最后一个子元素开始计数")]),v._v(" "),e("li",[e("code",[v._v("div:only-child")]),v._v(": 选择属于其父元素的唯一子元素的每个"),e("code",[v._v("div")]),v._v("元素")]),v._v(" "),e("li",[e("code",[v._v(":empty")]),v._v(": 选择的元素里面没有任何内容")]),v._v(" "),e("li",[e("code",[v._v(":checked")]),v._v(": 匹配被选中的"),e("code",[v._v("input")]),v._v("元素，这个"),e("code",[v._v("input")]),v._v("元素包括"),e("code",[v._v("radio")]),v._v("和"),e("code",[v._v("checkbox")])]),v._v(" "),e("li",[e("code",[v._v(":default")]),v._v(": 匹配默认选中的元素，例如提交按钮总是表单的默认按钮")]),v._v(" "),e("li",[e("code",[v._v(":disabled")]),v._v(": 匹配禁用的表单元素")]),v._v(" "),e("li",[e("code",[v._v(":enabled")]),v._v(": 匹配没有设置"),e("code",[v._v("disabled")]),v._v("属性的表单元素")]),v._v(" "),e("li",[e("code",[v._v(":valid")]),v._v(": 匹配条件验证正确的表单元素")]),v._v(" "),e("li",[v._v("... ...")])]),v._v(" "),e("h2",{attrs:{id:"伪元素"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#伪元素"}},[v._v("#")]),v._v(" 伪元素")]),v._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"title"}),e("p",[v._v("​\t\t用于创建一些不在文档树中的元素，并为其添加样式。实际上，伪元素就是选取某些元素前面或后面这种普通选择器无法完成的工作。控制的内容和元素是相同的，但它本身是基于元素的抽象，"),e("strong",[v._v("并不存在于文档结构中")]),v._v("。比如，我们可以通过"),e("code",[v._v("::before")]),v._v("来在一个元素前增加一些文本，并为这些文本添加样式")])]),e("ul",[e("li",[e("code",[v._v("::first-letter")]),v._v(": 选择元素文本的第一个字")]),v._v(" "),e("li",[e("code",[v._v("::first-line")]),v._v("： 选择元素文本的第一行")]),v._v(" "),e("li",[e("code",[v._v("::before")]),v._v(": 在元素内容的最前面添加新内容")]),v._v(" "),e("li",[e("code",[v._v("::after")]),v._v(": 在元素内容的最后面添加新内容")]),v._v(" "),e("li",[e("code",[v._v("::selection")]),v._v(":  匹配用户被用户选中或者处于高亮状态的部分")]),v._v(" "),e("li",[e("code",[v._v("::placeholde")]),v._v(": 配占位符的文本，只有元素设置了"),e("code",[v._v("placeholder")]),v._v("属性时，该伪元素才能生效")])])])}),[],!1,null,null,null);_.default=d.exports}}]);